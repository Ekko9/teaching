<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.teaching.dao.TeacherMapper" >
  <resultMap id="BaseResultMap" type="com.teaching.bean.Teacher" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="usertype" property="usertype" jdbcType="INTEGER" />
    <result column="loginname" property="loginname" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="workId" property="workid" jdbcType="VARCHAR" />
    <result column="majid" property="majid" jdbcType="INTEGER" />
    <result column="pre1" property="pre1" jdbcType="INTEGER" />
    <result column="pre2" property="pre2" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, usertype, loginname, password, workId, majid, pre1, pre2
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.teaching.bean.TeacherExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from teacher
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from teacher
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from teacher
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.teaching.bean.TeacherExample" >
    delete from teacher
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.teaching.bean.Teacher" >
    insert into teacher (id, name, usertype, 
      loginname, password, workId, 
      majid, pre1, pre2)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{usertype,jdbcType=INTEGER}, 
      #{loginname,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{workid,jdbcType=VARCHAR}, 
      #{majid,jdbcType=INTEGER}, #{pre1,jdbcType=INTEGER}, #{pre2,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.teaching.bean.Teacher" >
    insert into teacher
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="usertype != null" >
        usertype,
      </if>
      <if test="loginname != null" >
        loginname,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="workid != null" >
        workId,
      </if>
      <if test="majid != null" >
        majid,
      </if>
      <if test="pre1 != null" >
        pre1,
      </if>
      <if test="pre2 != null" >
        pre2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="usertype != null" >
        #{usertype,jdbcType=INTEGER},
      </if>
      <if test="loginname != null" >
        #{loginname,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="workid != null" >
        #{workid,jdbcType=VARCHAR},
      </if>
      <if test="majid != null" >
        #{majid,jdbcType=INTEGER},
      </if>
      <if test="pre1 != null" >
        #{pre1,jdbcType=INTEGER},
      </if>
      <if test="pre2 != null" >
        #{pre2,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.teaching.bean.TeacherExample" resultType="java.lang.Integer" >
    select count(*) from teacher
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update teacher
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.usertype != null" >
        usertype = #{record.usertype,jdbcType=INTEGER},
      </if>
      <if test="record.loginname != null" >
        loginname = #{record.loginname,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.workid != null" >
        workId = #{record.workid,jdbcType=VARCHAR},
      </if>
      <if test="record.majid != null" >
        majid = #{record.majid,jdbcType=INTEGER},
      </if>
      <if test="record.pre1 != null" >
        pre1 = #{record.pre1,jdbcType=INTEGER},
      </if>
      <if test="record.pre2 != null" >
        pre2 = #{record.pre2,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update teacher
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      usertype = #{record.usertype,jdbcType=INTEGER},
      loginname = #{record.loginname,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      workId = #{record.workid,jdbcType=VARCHAR},
      majid = #{record.majid,jdbcType=INTEGER},
      pre1 = #{record.pre1,jdbcType=INTEGER},
      pre2 = #{record.pre2,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.teaching.bean.Teacher" >
    update teacher
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="usertype != null" >
        usertype = #{usertype,jdbcType=INTEGER},
      </if>
      <if test="loginname != null" >
        loginname = #{loginname,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="workid != null" >
        workId = #{workid,jdbcType=VARCHAR},
      </if>
      <if test="majid != null" >
        majid = #{majid,jdbcType=INTEGER},
      </if>
      <if test="pre1 != null" >
        pre1 = #{pre1,jdbcType=INTEGER},
      </if>
      <if test="pre2 != null" >
        pre2 = #{pre2,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.teaching.bean.Teacher" >
    update teacher
    set name = #{name,jdbcType=VARCHAR},
      usertype = #{usertype,jdbcType=INTEGER},
      loginname = #{loginname,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      workId = #{workid,jdbcType=VARCHAR},
      majid = #{majid,jdbcType=INTEGER},
      pre1 = #{pre1,jdbcType=INTEGER},
      pre2 = #{pre2,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="getkb" parameterType="int" resultType="CtcView">
  	select weekid,timeid,c.name couname,cla.name claname,case ctc.type when 0 then '必修' when 1 then '选修' end as typestr 
  	from ctc,course c,classes cla 
  	where ctc.tid=#{tid} and ctc.couid=c.id and ctc.claid=cla.id
  </select>
  
  <select id="getMyStu" parameterType="map" resultType="StuScore">
  	select s.*,c.name couname,c.id as cid
  	<choose>
  		<when test="type==0">
  			from(select tid,claid,couid from ctc where ctc.tid=#{tid} and type=0 group by tid,couid,claid)ctcn,
  			student s,course c where ctcn.claid=s.classid and ctcn.couid=c.id 
  			<if test="claid!=0">
  			and ctcn.claid=#{claid}
  			</if>
  		</when>
  		<when test="type==1">
  			from sc,student s,course c where sc.sid=s.id and sc.cid=c.id and tid=#{tid} 
  			<if test="claid!=0">
  			 and s.classid=#{claid}
  			</if>
  		</when>
  	</choose>
  </select>
  
  <select id="getClass" resultType="classes" parameterType="int">
  	select distinct(c.id),c.id,c.name from ctc,classes c where ctc.claid=c.id and ctc.tid=1;
  </select>
  
   <resultMap type="teacher" id="rs" extends="BaseResultMap">
 	<!-- <association property="maj" javaType="major">
  		<result column="mname" property="name"/>
  	</association>  -->
  	<result column="id" property="id"/>
  	<result column="name" property="name"/>
  	<result column="loginname" property="loginname"/>
  	<result column="workid" property="workid"/>
  	<result column="majid" property="majid"/>
  </resultMap>
  
  <select id="getPage" resultMap="rs">
  	select * from teacher  limit #{start},#{size}
  </select>
  <select id="getPage1" resultMap="rs">
  	select * from teacher 
  </select>
</mapper>